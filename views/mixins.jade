mixin renderProducts(products)
  for product in products
    +renderProduct(product)

mixin renderProduct(product)
    .product-in-list
      .product-image
        +renderImage(product.fields.image[0], product.fields.slug, 150, 150)
      .product-details
        +renderProductDetails(product.fields)


mixin renderImage(image, slug, w, h)
  if image && image.fields.file
    if slug != ""
      a(href="products/"+slug data-nav) 
        img(src=image.fields.file.url alt=image.fields.title width=w height=h)
    else
      img(src=image.fields.file.url alt=image.fields.title width=w height=h)
  else


mixin renderProductDetails(fields)
  +renderProductHeader(fields)
  p.product-categories #{fields.categories.map(function(category){ return category.fields.title }).join(', ')}
  p #{fields.productDescription}
  p #{fields.price} &euro;
  p.product-tags #{fields.tags.join(', ')}

mixin renderProductHeader(fields)
  .product-header
    h2
      a(href="products/"+fields.slug data-nav) #{fields.productName}
    span  by
    a(href="brand/"+fields.brand.sys.id data-env)  #{fields.brand.fields.companyName}

mixin renderSingleProduct(singleProduct)
  .product
    .product-image
      +renderImage(singleProduct.fields.image[0], "", 300, 300)
    .product-header
      h2 #{singleProduct.fields.productName}
      span   by
      a(href="brand/"+singleProduct.fields.brand.sys.id data-nav) #{singleProduct.fields.brand.fields.companyName}
    p.product-categories #{singleProduct.fields.categories.map(function(category){ return category.fields.title }).join(', ')}
    p singleProduct.fields.productDescription
    p Size/Type/Color: #{singleProduct.fields.sizetypecolor}
    p #{singleProduct.fields.quantity} in stock
    p #{singleProduct.fields.price} &euro;
    p SKU: #{singleProduct.fields.sku}
    p More details:
      a(href=singleProduct.fields.website) #{singleProduct.fields.website}
    p.product-tags
      span Tags: #{singleProduct.fields.tags.join(', ')}
      
